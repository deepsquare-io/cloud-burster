name: Cloud Burster CI

on:
  push:
    tags:
      - '*'
    branches:
      - '*'
  pull_request:

jobs:
  lint:
    name: Lint Supervisor
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
          check-latest: true

      - name: Setup Go cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-

      - name: Download all Go modules
        run: |
          go mod download

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout 5m

  test:
    name: Test Supervisor
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.19'

      - name: Setup Go cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-

      - name: Download all Go modules
        run: |
          go mod download

      - name: test
        run: go test -v -race -covermode=atomic -tags=unit -timeout=30s ./...

  build-export:
    name: Build and export cloud burster
    runs-on: ubuntu-latest

    needs: [lint, test]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.19'

      - name: Setup Go cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-

      - name: Download all Go modules
        run: |
          go mod download

      - name: Build
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: make build-all -j$(nproc)

      - name: Build with tag
        if: startsWith(github.ref, 'refs/tags/')
        env:
          TAG_NAME: ${{ steps.branch_name.outputs.TAG_NAME }}
        run: make build-all -j$(nproc)

      - name: Branch name
        if: startsWith(github.ref, 'refs/tags/')
        id: branch_name
        run: |
          echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Get the oci compatible version
        if: startsWith(github.ref, 'refs/tags/')
        id: get_version
        run: |
          OCI_VERSION=$(echo ${GITHUB_REF#refs/*/} | sed 's/+/-/g')
          echo "VERSION=${OCI_VERSION}" >> $GITHUB_OUTPUT

      - name: Create release and upload binaries
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            bin/cloud-burster-*
            bin/checksums.txt
          body_path: bin/checksums.md
          tag_name: ${{ steps.branch_name.outputs.TAG_NAME }}
          name: ${{ steps.branch_name.outputs.TAG_NAME }}
          draft: false # So we can manually edit before publishing
          prerelease: ${{ contains(steps.get_version.outputs.VERSION, '-') }} # v0.1.2-beta1, 1.2.3-rc1
